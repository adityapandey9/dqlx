(self.webpackChunkdqlx_docs=self.webpackChunkdqlx_docs||[]).push([[984],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9962:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u},default:function(){return s}});var r=t(2122),o=t(9756),i=(t(7294),t(3905)),a={sidebar_position:6},l={unversionedId:"queries/multiple-query-blocks",id:"queries/multiple-query-blocks",isDocsHomePage:!1,title:"Multiple Query Blocks",description:"Often we want to be able to run multiple query blocks in a single round trip to maximize latency.",source:"@site/docs/queries/multiple-query-blocks.md",sourceDirName:"queries",slug:"/queries/multiple-query-blocks",permalink:"/dqlx/docs/queries/multiple-query-blocks",editUrl:"https://github.com/fenos/dqlx-docs/edit/master/docs/queries/multiple-query-blocks.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Execution",permalink:"/dqlx/docs/queries/execution"},next:{title:"Set",permalink:"/dqlx/docs/mutations/set"}},u=[],c={toc:u};function s(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Often we want to be able to run multiple query blocks in a single round trip to maximize latency."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"db.ExecuteQueries()")," function accepts a list of ",(0,i.kt)("inlineCode",{parentName:"p"},"QueryBuilder")," and it will smartly compose\na single giant query to be sent to DGraph."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'var data1 []map[string]interface{}\n\nquery1 := db.\n    Query(dqlx.HasFn("name")).\n    Fields(`\n        uid\n        name\n        species\n    `).\n    Filter(\n        dqlx.EqFn("name", "Ollie"),\n    ).\n    UnmarshallInto(&data1)\n\nvar data2 []map[string]interface{}\n\nquery2 := db.\n    Query(dqlx.HasFn("name")).\n    Fields(`\n        uid\n        name\n        species\n    `).\n    Filter(\n        dqlx.EqFn("name", "Leo"),\n    ).\n    UnmarshallInto(&data2)\n\nresp, err := db.ExecuteQueries(ctx, []dqlx.QueryBuilder{query1, query2})\n')))}s.isMDXComponent=!0}}]);