(self.webpackChunkdqlx_docs=self.webpackChunkdqlx_docs||[]).push([[306],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return c},kt:function(){return f}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=t.createContext({}),s=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||i;return r?t.createElement(m,l(l({ref:n},c),{},{components:r})):t.createElement(m,l({ref:n},c))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2527:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return l},metadata:function(){return o},toc:function(){return u},default:function(){return c}});var t=r(2122),a=r(9756),i=(r(7294),r(3905)),l={sidebar_position:5},o={unversionedId:"queries/variables",id:"queries/variables",isDocsHomePage:!1,title:"Query Variables",description:"In this section we'll learn how to create Query Variables",source:"@site/docs/queries/variables.md",sourceDirName:"queries",slug:"/queries/variables",permalink:"/dqlx/docs/queries/variables",editUrl:"https://github.com/fenos/dqlx-docs/edit/master/docs/queries/variables.md",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Pagination",permalink:"/dqlx/docs/queries/pagination"},next:{title:"Execution",permalink:"/dqlx/docs/queries/execution"}},u=[{value:"Defining Query Variable",id:"defining-query-variable",children:[{value:"Use the variable",id:"use-the-variable",children:[]}]}],s={toc:u};function c(e){var n=e.components,r=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this section we'll learn how to create Query Variables"),(0,i.kt)("h2",{id:"defining-query-variable"},"Defining Query Variable"),(0,i.kt)("p",null,"This time let's start from the plain DQL statement to define a variable"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"var(func: eq(name, $0)) {\n    film {\n        performance {\n            D AS genre\n        }\n    }\n}\n")),(0,i.kt)("p",null,"then you will write the variable this way"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'variable := dqlx.Variable(dql.EqFn("name", "test")).\n    Edge("film").\n    Edge("film->performance", dqlx.Fields(`\n         D AS genre\n    `))\n')),(0,i.kt)("p",null,"If you want to add a variable on an edge you'll use ",(0,i.kt)("inlineCode",{parentName:"p"},"EdgeAs()")," function, For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"A AS var(func: eq(name, $0)) {\n    B AS film {\n        C AS performance {\n            D AS genre\n        }\n    }\n}\n")),(0,i.kt)("p",null,"You'll write"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'variable := dqlx.Variable(dql.EqFn("name", "test")).\n    As("A").\n    EdgeAs("B", "film").\n    EdgeAs("C", "film->performance", dqlx.Fields(`\n         D AS genre\n    `))\n')),(0,i.kt)("h3",{id:"use-the-variable"},"Use the variable"),(0,i.kt)("p",null,"To use a variable within a query is super simple, just add the variable to a query using the ",(0,i.kt)("inlineCode",{parentName:"p"},"Variable()")," method\nthen refer to it with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Expr")," function"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'variable := dqlx.Variable(dql.EqFn("name", "test")).\n    Edge("film").\n    Edge("film->performance", dqlx.Fields(`\n         D AS genre\n    `))\n\ndb.QueryType("Film").\n    Fields("uid").\n    Filter(dqlx.Eq{\n        "genre": dqlx.Expr("D"),    \n    }).\n    Variable(variable)\n')))}c.isMDXComponent=!0}}]);